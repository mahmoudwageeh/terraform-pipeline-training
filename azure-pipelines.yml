trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: subscription_id
  value: $(subscription_id)
- name:  tenant_id
  value: $(tenant_id)
- name:  client_id
  value: $(client_id)
- name: client_secret
  value: $(client_secret)

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendAzureRmUseEnvironmentVariablesForAuthentication: true
        backendServiceArm: 'Azure subscription 1(b98d2b8d-4039-4e94-a202-67c3a82a3ced)'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-var ''name=subscription_id'' -var ''name=tenant_id'''
        environmentServiceNameAzureRM: 'Azure subscription 1(b98d2b8d-4039-4e94-a202-67c3a82a3ced)'

- stage: Deploy
  displayName: 'Terraform Apply'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'init'
        allowTelemetryCollection: false
    - task: TerraformCLI@2
      inputs:
        command: 'apply'
        commandOptions: '-auto-approve'
        allowTelemetryCollection: false